{"version":3,"sources":["../../src/model/login.js"],"names":["connection","createConnection","host","port","user","password","database","insecureAuth","connect","err","userLogin","info","cb","query","userName","result","length","code","personage","msg","Logon","nickname","email","phone","navMenu","details","payload","uid","name","listData"],"mappings":";;;;;;;AAAA;;;;AACA;;;;;;AAEA,IAAMA,aAAa,gBAAMC,gBAAN,CAAuB;AACxCC,QAAM,WADkC;AAExCC,QAAM,IAFkC;AAGxCC,QAAM,MAHkC;AAIxCC,YAAU,QAJ8B;AAKxCC,YAAU,MAL8B;AAMxCC,gBAAc;AAN0B,CAAvB,CAAnB;;AASAP,WAAWQ,OAAX,CAAmB,eAAO;AACxB,MAAIC,GAAJ,EAAS;AACP,UAAMA,GAAN;AACD;AACF,CAJD;;AAMA,IAAMC,YAAY,SAAZA,SAAY,CAACC,IAAD,EAAOC,EAAP,EAAc;AAC9BZ,aAAWa,KAAX,CAAiB,qCAAjB,EAAwD,CAACF,KAAKG,QAAN,CAAxD,EAAyE,UAACL,GAAD,EAAMM,MAAN,EAAiB;AACxF,QAAIA,OAAOC,MAAP,KAAkB,CAAtB,EAAyB;AACvB,UAAID,OAAO,CAAP,EAAUV,QAAV,KAAuBM,KAAKN,QAAhC,EAA0C;AACxCO,WAAG;AACDK,gBAAM,CADL;AAEDC,qBAAWH,OAAO,CAAP,CAFV;AAGDI,eAAK;AAHJ,SAAH;AAKD,OAND,MAMO;AACLP,WAAG;AACDK,gBAAM,CADL;AAEDE,eAAK;AAFJ,SAAH;AAID;AACF,KAbD,MAaO;AACLP,SAAG;AACDK,cAAM,CADL;AAEDE,aAAK;AAFJ,OAAH;AAID;AACF,GApBD;AAqBD,CAtBD;;AAwBA,IAAMC,QAAQ,SAARA,KAAQ,CAACT,IAAD,EAAOC,EAAP,EAAc;AAC1BZ,aAAWa,KAAX,CAAiB,qCAAjB,EAAwD,CAACF,KAAKU,QAAN,CAAxD,EAAyE,UAACZ,GAAD,EAAMM,MAAN,EAAiB;AACxF,QAAIA,OAAOC,MAAP,KAAkB,CAAtB,EAAyB;AACvBhB,iBAAWa,KAAX,sEAAsF,CAACF,KAAKU,QAAN,EAAgBV,KAAKN,QAArB,EAA+BM,KAAKW,KAApC,EAA2CX,KAAKY,KAAhD,CAAtF,EAA8I,UAACd,GAAD,EAAMM,MAAN,EAAiB;AAC7JH,WAAG;AACDK,gBAAM,CADL;AAEDE,eAAK;AAFJ,SAAH;AAID,OALD;AAMD,KAPD,MAOO;AACLP,SAAG;AACDK,cAAM,CADL;AAEDE,aAAK;AAFJ,OAAH;AAID;AACF,GAdD;AAeD,CAhBD;;AAkBA,IAAMK,UAAU,SAAVA,OAAU,CAACb,IAAD,EAAOC,EAAP,EAAc;AAC5BZ,aAAWa,KAAX,CAAiB,qCAAjB,EAAwD,CAACF,IAAD,CAAxD,EAAgE,UAACF,GAAD,EAAMM,MAAN,EAAiB;AAC/E,QAAIA,OAAOC,MAAP,KAAkB,CAAtB,EAAyB;AACvBJ,SAAG;AACDK,cAAM,CADL;AAEDC,mBAAWH,OAAO,CAAP,CAFV;AAGDI,aAAK;AAHJ,OAAH;AAKD,KAND,MAMO;AACLP,SAAG;AACDK,cAAM,CADL;AAEDE,aAAK;AAFJ,OAAH;AAID;AACF,GAbD;AAcD,CAfD;;AAiBA,IAAMM,UAAU,SAAVA,OAAU,CAACC,OAAD,EAAUd,EAAV,EAAiB;AAC/BA,KAAG;AACDe,SAAKD,QAAQC,GADZ;AAEDC,UAAMF,QAAQE,IAFb;AAGDC;AAHC,GAAH;AAKD,CAND;;QASEnB,S,GAAAA,S;QACAU,K,GAAAA,K;QACAK,O,GAAAA,O;QACAD,O,GAAAA,O","file":"login.js","sourcesContent":["import mysql from 'mysql';\nimport listData from '../../mock/listData.json'\n\nconst connection = mysql.createConnection({\n  host: 'localhost',\n  port: 3306,\n  user: 'root',\n  password: '123456',\n  database: 'dcxt',\n  insecureAuth: true\n});\n\nconnection.connect(err => {\n  if (err) {\n    throw err;\n  }\n});\n\nconst userLogin = (info, cb) => {\n  connection.query('select * from user where userName=?', [info.userName], (err, result) => {\n    if (result.length !== 0) {\n      if (result[0].password === info.password) {\n        cb({\n          code: 1,\n          personage: result[0],\n          msg: '登陆成功',\n        })\n      } else {\n        cb({\n          code: 0,\n          msg: '密码错误'\n        })\n      }\n    } else {\n      cb({\n        code: 2,\n        msg: '用户名不存在请注册'\n      })\n    }\n  })\n};\n\nconst Logon = (info, cb) => {\n  connection.query('select * from user where userName=?', [info.nickname], (err, result) => {\n    if (result.length === 0) {\n      connection.query(`insert into user (userName,password,email,phone) values (?,?,?,?)`, [info.nickname, info.password, info.email, info.phone], (err, result) => {\n        cb({\n          code: 1,\n          msg: '注册成功'\n        })\n      })\n    } else {\n      cb({\n        code: 0,\n        msg: '用户名重复请重新注册'\n      })\n    }\n  });\n};\n\nconst navMenu = (info, cb) => {\n  connection.query('select * from user where userName=?', [info], (err, result) => {\n    if (result.length !== 0) {\n      cb({\n        code: 1,\n        personage: result[0],\n        msg: '获取成功',\n      })\n    } else {\n      cb({\n        code: 0,\n        msg: '获取失败'\n      })\n    }\n  })\n};\n\nconst details = (payload, cb) => {\n  cb({\n    uid: payload.uid,\n    name: payload.name,\n    listData\n  })\n};\n\nexport {\n  userLogin,\n  Logon,\n  details,\n  navMenu\n}\n"]}